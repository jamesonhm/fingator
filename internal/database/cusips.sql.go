// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: cusips.sql

package database

import (
	"context"
)

const getUnmatchedCusips = `-- name: GetUnmatchedCusips :many
SELECT DISTINCT(cusip)
FROM holdings
WHERE cusip NOT IN (
    SELECT cusip FROM cusips
)
`

func (q *Queries) GetUnmatchedCusips(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getUnmatchedCusips)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var cusip string
		if err := rows.Scan(&cusip); err != nil {
			return nil, err
		}
		items = append(items, cusip)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
